// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetProcGame.Data;

namespace NetProcGame.Data.Migrations
{
    [DbContext(typeof(NetProcDbContext))]
    [Migration("20220128061923_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.22");

            modelBuilder.Entity("NetProcGame.Data.Model.Audit", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Audits");
                });

            modelBuilder.Entity("NetProcGame.Data.Model.GameAudit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("GameAudit");
                });

            modelBuilder.Entity("NetProcGame.Data.Model.GameLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BallsPlayed")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("GameAuditId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlayerId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Score")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GameAuditId");

                    b.ToTable("GameLog");
                });

            modelBuilder.Entity("NetProcGame.Data.Model.Machine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MachineType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<bool>("displayMonitor")
                        .HasColumnType("INTEGER");

                    b.Property<int>("numBalls")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Machine");
                });

            modelBuilder.Entity("NetProcGame.Data.Model.PRCoil", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Bus")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Number")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Polarity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PulseTime")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("PRCoils");
                });

            modelBuilder.Entity("NetProcGame.Data.Model.PRLamp", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Bus")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Number")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Polarity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("PRLamps");
                });

            modelBuilder.Entity("NetProcGame.Data.Model.PRSwitch", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Number")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("PRSwitches");
                });

            modelBuilder.Entity("NetProcGame.Data.Model.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Default")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Initials")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("NetProcGame.Data.Model.Setting", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("NetProcGame.Data.Model.GameLog", b =>
                {
                    b.HasOne("NetProcGame.Data.Model.GameAudit", null)
                        .WithMany("GameLogs")
                        .HasForeignKey("GameAuditId");
                });
#pragma warning restore 612, 618
        }
    }
}
